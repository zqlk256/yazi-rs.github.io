"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1783],{3382:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"configuration/theme","title":"theme.toml","description":"Learn how to configure your Yazi theme.","source":"@site/docs/configuration/theme.md","sourceDirName":"configuration","slug":"/configuration/theme","permalink":"/docs/configuration/theme","draft":false,"unlisted":false,"editUrl":"https://github.com/yazi-rs/yazi-rs.github.io/edit/main/docs/configuration/theme.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"description":"Learn how to configure your Yazi theme."},"sidebar":"docsSidebar","previous":{"title":"keymap.toml","permalink":"/docs/configuration/keymap"},"next":{"title":"keymap-arrow","permalink":"/docs/configuration/keymap-arrow"}}');var s=l(6070),r=l(7082);l(2622);const t={sidebar_position:3,description:"Learn how to configure your Yazi theme."},c="theme.toml",d={},o=[{value:"Types",id:"types",level:2},{value:"Color",id:"types.color",level:3},{value:"Style",id:"types.style",level:3},{value:"[flavor]",id:"flavor",level:2},{value:"[manager]",id:"manager",level:2},{value:"[mode]",id:"mode",level:2},{value:"[status]",id:"status",level:2},{value:"[which]",id:"which",level:2},{value:"[confirm]",id:"confirm",level:2},{value:"[spot]",id:"spot",level:2},{value:"[notify]",id:"notify",level:2},{value:"[pick]",id:"pick",level:2},{value:"[input]",id:"input",level:2},{value:"[cmp]",id:"cmp",level:2},{value:"[tasks]",id:"tasks",level:2},{value:"[help]",id:"help",level:2},{value:"[filetype]",id:"filetype",level:2},{value:"[icon]",id:"icon",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{Details:l}=n;return l||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"themetoml",children:"theme.toml"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["If you're looking for ready-made themes and don't want to create one yourself, check out the ",(0,s.jsx)(n.a,{href:"https://github.com/yazi-rs/flavors",children:"yazi-rs/flavors"})," repository."]})}),"\n",(0,s.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,s.jsx)(n.h3,{id:"types.color",children:"Color"}),"\n",(0,s.jsxs)(n.p,{children:["A color. It can be in Hex format with RGB values, such as ",(0,s.jsx)(n.code,{children:'"#484D66"'}),". Or can be one of the following 17 values:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"reset"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"black"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"white"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"red"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"lightred"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"green"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"lightgreen"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"yellow"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"lightyellow"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"blue"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"lightblue"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"magenta"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"lightmagenta"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"cyan"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"lightcyan"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"gray"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"darkgray"'})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"types.style",children:"Style"}),"\n",(0,s.jsxs)(n.p,{children:["Appears in a format similar to ",(0,s.jsx)(n.code,{children:'{ fg = "#e4e4e4", bg = "black", ... }'}),", and supports the following properties:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"fg (Color): Foreground color"}),"\n",(0,s.jsx)(n.li,{children:"bg (Color): Background color"}),"\n",(0,s.jsx)(n.li,{children:"bold (Boolean): Bold"}),"\n",(0,s.jsx)(n.li,{children:"dim (Boolean): Dim (not supported by all terminals)"}),"\n",(0,s.jsx)(n.li,{children:"italic (Boolean): Italic"}),"\n",(0,s.jsx)(n.li,{children:"underline (Boolean): Underline"}),"\n",(0,s.jsx)(n.li,{children:"blink (Boolean): Blink"}),"\n",(0,s.jsx)(n.li,{children:"blink_rapid (Boolean): Rapid blink"}),"\n",(0,s.jsx)(n.li,{children:"reversed (Boolean): Reversed foreground and background colors"}),"\n",(0,s.jsx)(n.li,{children:"hidden (Boolean): Hidden"}),"\n",(0,s.jsx)(n.li,{children:"crossed (Boolean): Crossed out"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"flavor",children:"[flavor]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["dark (String): Flavor name used in dark mode, e.g. ",(0,s.jsx)(n.code,{children:'"dracula"'}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["light (String): Flavor name used in light mode, e.g. ",(0,s.jsx)(n.code,{children:'"gruvbox"'}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"/docs/flavors/overview",children:"flavor documentation"})," for more details."]}),"\n",(0,s.jsx)(n.h2,{id:"manager",children:"[manager]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"cwd (Style): CWD text style."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Hovered:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"hovered (Style): Hovered file style."}),"\n",(0,s.jsx)(n.li,{children:"preview_hovered (Style): Hovered file style, in the preview pane."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Find: The ",(0,s.jsx)(n.code,{children:"find"})," feature"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"find_keyword (Style): Style of the highlighted portion in the filename."}),"\n",(0,s.jsx)(n.li,{children:"find_position (Style): Style of current file location in all found files to the right of the filename."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Marker: Color block on the left side separator line in the filename."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"marker_copied (Style): Copied file marker style."}),"\n",(0,s.jsx)(n.li,{children:"marker_cut (Style): Cut file marker style."}),"\n",(0,s.jsx)(n.li,{children:"marker_marked (Style): Marker style of pre-selected file in visual mode."}),"\n",(0,s.jsx)(n.li,{children:"marker_selected (Style): Selected file marker style."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Tab: Tab bar."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"tab_active (Style): Active tab style."}),"\n",(0,s.jsx)(n.li,{children:"tab_inactive (Style): Inactive tab style."}),"\n",(0,s.jsx)(n.li,{children:"tab_width (Number): Tab maximum width. When set to a value greater than 2, the remaining space will be filled with the tab name, which is current directory name."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Count: Counters."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"count_copied (Style): Style of copied file number."}),"\n",(0,s.jsx)(n.li,{children:"count_cut (Style): Style of cut file number."}),"\n",(0,s.jsx)(n.li,{children:"count_selected (Style): Style of selected file number."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Border:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["border_symbol (String): Border symbol. e.g. ",(0,s.jsx)(n.code,{children:'"\u2502"'}),"."]}),"\n",(0,s.jsx)(n.li,{children:"border_style (Style): Border style."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Highlighting: The built-in syntax highlighting feature"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["syntect_theme (String): For example, ",(0,s.jsx)(n.code,{children:'"~/Downloads/Dracula.tmTheme"'}),", not available after using a flavor, as flavors always use their own tmTheme files ",(0,s.jsx)(n.code,{children:"tmtheme.xml"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Code preview highlighting themes, which are paths to ",(0,s.jsx)(n.code,{children:".tmTheme"})," files. You can find them on GitHub ",(0,s.jsx)(n.a,{href:"https://github.com/search?q=tmTheme&type=repositories",children:'using "tmTheme" as a keyword'})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"mode",children:"[mode]"}),"\n",(0,s.jsx)(n.p,{children:"Normal mode"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"normal_main (Style): Normal mode main style."}),"\n",(0,s.jsx)(n.li,{children:"normal_alt (Style): Normal mode alternative style."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Select mode"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"select_main (Style): Select mode main style."}),"\n",(0,s.jsx)(n.li,{children:"select_alt (Style): Select mode alternative style."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Unset mode"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"unset_main (Style): Unset mode main style."}),"\n",(0,s.jsx)(n.li,{children:"unset_alt (Style): Unset mode alternative style."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"status",children:"[status]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"overall (Style): Overall status bar style."}),"\n",(0,s.jsxs)(n.li,{children:["sep_left (",(0,s.jsx)(n.code,{children:"{ open: String, close: String }"}),"): Left separator symbol. e.g. ",(0,s.jsx)(n.code,{children:'{ open = "", close = "]" }'}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["sep_right (",(0,s.jsx)(n.code,{children:"{ open: String, close: String }"}),"): Right separator symbol. e.g. ",(0,s.jsx)(n.code,{children:'{ open = "[", close = "" }'}),"."]}),"\n"]}),"\n",(0,s.jsxs)(l,{children:[(0,s.jsxs)("summary",{children:["Explanation of ",(0,s.jsx)(n.code,{children:"sep_left"})," and ",(0,s.jsx)(n.code,{children:"sep_right"})]}),(0,s.jsx)("img",{src:"/webp/status-sep-explain.webp",loading:"lazy"})]}),"\n",(0,s.jsx)(n.p,{children:"Permissions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"perm_type (Style): File type."}),"\n",(0,s.jsx)(n.li,{children:"perm_read (Style): Read permission."}),"\n",(0,s.jsx)(n.li,{children:"perm_write (Style): Write permission."}),"\n",(0,s.jsx)(n.li,{children:"perm_exec (Style): Execute permission."}),"\n",(0,s.jsxs)(n.li,{children:["perm_sep (Style): ",(0,s.jsx)(n.code,{children:"-"})," separator."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Progress"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"progress_label (Style): Progress label style."}),"\n",(0,s.jsx)(n.li,{children:"progress_normal (Style): Style of the progress bar when it is not in an error state."}),"\n",(0,s.jsx)(n.li,{children:"progress_error (Style): Style of the progress bar when an error occurs."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"which",children:"[which]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["cols (Number): Number of columns. The value can be ",(0,s.jsx)(n.code,{children:"1"}),", ",(0,s.jsx)(n.code,{children:"2"}),", ",(0,s.jsx)(n.code,{children:"3"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"mask (Style): Mask style."}),"\n",(0,s.jsx)(n.li,{children:"cand (Style): Candidate key style."}),"\n",(0,s.jsx)(n.li,{children:"rest (Style): Rest key style."}),"\n",(0,s.jsx)(n.li,{children:"desc (Style): Description style."}),"\n",(0,s.jsxs)(n.li,{children:["separator (String): Separator symbol. e.g. ",(0,s.jsx)(n.code,{children:'" -> "'}),"."]}),"\n",(0,s.jsx)(n.li,{children:"separator_style (Style): Separator style."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"confirm",children:"[confirm]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"border (Style): Border style."}),"\n",(0,s.jsx)(n.li,{children:"title (Style): Title style."}),"\n",(0,s.jsx)(n.li,{children:"content (Style): Content style."}),"\n",(0,s.jsx)(n.li,{children:"list (Style): List style, which is the style of the list of items below the content."}),"\n",(0,s.jsx)(n.li,{children:"btn_yes (Style): The style of the yes button."}),"\n",(0,s.jsx)(n.li,{children:"btn_no (Style): The style of the no button."}),"\n",(0,s.jsxs)(n.li,{children:["btn_labels (",(0,s.jsx)(n.code,{children:"[String, String]"}),"): The labels for the yes and no buttons. The first string is the label for the yes button and the second is the label for the no button."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"spot",children:"[spot]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"border (Style): Border style."}),"\n",(0,s.jsx)(n.li,{children:"title (Style): Title style."}),"\n",(0,s.jsx)(n.li,{children:"tbl_col (Style): The style of the selected column in the table."}),"\n",(0,s.jsx)(n.li,{children:"tbl_cell (Style): The style of the selected cell in the table."}),"\n"]}),"\n",(0,s.jsxs)(l,{children:[(0,s.jsxs)("summary",{children:["Explanation of ",(0,s.jsx)(n.code,{children:"tbl_col"})," and ",(0,s.jsx)(n.code,{children:"tbl_cell"})]}),(0,s.jsx)("img",{src:"/webp/spot-tbl-explain.webp",loading:"lazy"})]}),"\n",(0,s.jsx)(n.h2,{id:"notify",children:"[notify]"}),"\n",(0,s.jsx)(n.p,{children:"Title: Notification title."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"title_info (Style): Style of the info title."}),"\n",(0,s.jsx)(n.li,{children:"title_warn (Style): Style of the warning title."}),"\n",(0,s.jsx)(n.li,{children:"title_error (Style): Style of the error title."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pick",children:"[pick]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"border (Style): Border style."}),"\n",(0,s.jsx)(n.li,{children:"active (Style): Selected item style."}),"\n",(0,s.jsx)(n.li,{children:"inactive (Style): Unselected item style."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"input",children:"[input]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"border (Style): Border style."}),"\n",(0,s.jsx)(n.li,{children:"title (Style): Title style."}),"\n",(0,s.jsx)(n.li,{children:"value (Style): Value style."}),"\n",(0,s.jsx)(n.li,{children:"selected (Style): Selected value style."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"cmp",children:"[cmp]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"border (Style): Border style."}),"\n",(0,s.jsx)(n.li,{children:"active (Style): Selected item style."}),"\n",(0,s.jsx)(n.li,{children:"inactive (Style): Unselected item style."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Icons"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"icon_file (String): File icon."}),"\n",(0,s.jsx)(n.li,{children:"icon_folder (String): Folder icon."}),"\n",(0,s.jsx)(n.li,{children:"icon_command (String): Command icon."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"tasks",children:"[tasks]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"border (Style): Border style."}),"\n",(0,s.jsx)(n.li,{children:"title (Style): Title style."}),"\n",(0,s.jsx)(n.li,{children:"hovered (Style): Hovered item style."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"help",children:"[help]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"on (Style): Key column style."}),"\n",(0,s.jsx)(n.li,{children:"run (Style): Command column style."}),"\n",(0,s.jsx)(n.li,{children:"desc (Style): Description column style."}),"\n",(0,s.jsx)(n.li,{children:"hovered (Style): Hovered item style."}),"\n",(0,s.jsx)(n.li,{children:"footer (Style): Footer style."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Icon: Notification icon."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"icon_info (String): Info icon."}),"\n",(0,s.jsx)(n.li,{children:"icon_warn (String): Warning icon."}),"\n",(0,s.jsx)(n.li,{children:"icon_error (String): Error icon."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"filetype",children:"[filetype]"}),"\n",(0,s.jsx)(n.p,{children:"Set file list item display styles for specific file types, supporting matching by name and mime-type:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[filetype]\nrules = [\n\t# Images\n\t{ mime = "image/*", fg = "yellow" },\n\n\t# Videos\n\t{ mime = "video/*", fg = "magenta" },\n\t{ mime = "audio/*", fg = "magenta" },\n\n\t# Empty files\n\t{ mime = "inode/empty", fg = "cyan" },\n\n\t# Orphan symbolic links\n\t{ name = "*", is = "orphan", fg = "red" },\n\n\t# ...\n\n\t# Fallback\n\t# { name = "*", fg = "white" },\n\t{ name = "*/", fg = "blue" }\n]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Each rule supports complete ",(0,s.jsx)(n.a,{href:"#types.style",children:"Style properties"}),". There are two special rule:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'name = "*"'})," matches all files."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'name = "*/"'})," matches all directories."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can restrict the specific type of files through ",(0,s.jsx)(n.code,{children:"is"}),", noting that it must be used with either ",(0,s.jsx)(n.code,{children:"name"})," or ",(0,s.jsx)(n.code,{children:"mime"}),". It accepts the following values:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"block"}),": Block device"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"char"}),": Char device"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exec"}),": Executable"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fifo"}),": FIFO"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"link"}),": Symbolic link"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"orphan"}),": Orphan symbolic link"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sock"}),": Socket"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sticky"}),": File with sticky bit set"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"icon",children:"[icon]"}),"\n",(0,s.jsxs)(n.p,{children:["Yazi has builtin support for ",(0,s.jsx)(n.a,{href:"https://github.com/nvim-tree/nvim-web-devicons",children:"nvim-web-devicons"}),", a rich set of icons ready to use.\nIf you want to add your own rules to this set, you can use ",(0,s.jsx)(n.code,{children:"prepend_*"})," and ",(0,s.jsx)(n.code,{children:"append_*"})," to prepend or append rules to the default ones (see ",(0,s.jsx)(n.a,{href:"/docs/configuration/overview#mixing",children:"Configuration Mixing"})," for details):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[icon]\nprepend_dirs = [\n\t{ name = "desktop", text = "\uf108", fg = "#563d7c" },\n\t# ...\n]\nappend_exts = [\n\t{ name = "mp3", text = "\uf001", fg = "#00afff" },\n\t# ...\n]\n# ...\n'})}),"\n",(0,s.jsx)(n.p,{children:"If you want to completely override the default rules, you can do so with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[icon]\ndirs = [\n\t{ name = "desktop", text = "\uf108", fg = "#563d7c" },\n\t# ...\n]\nexts = [\n\t{ name = "mp3", text = "\uf001", fg = "#00afff" },\n\t# ...\n]\n# ...\n'})}),"\n",(0,s.jsx)(n.p,{children:"Each icon rule contains the following properties:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," (globs, dirs, files, exts), or ",(0,s.jsx)(n.code,{children:"if"})," (conds): the rule itself, which is a string"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"text"}),": icon text, which is a string"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fg"}),": icon color, which is a ",(0,s.jsx)(n.a,{href:"/docs/configuration/theme#types.color",children:"Color"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Icons are matched according to the following priority:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["globs: glob expressions, e.g., ",(0,s.jsx)(n.code,{children:'{ name = "**/Downloads/*.zip", ... }'})]}),"\n",(0,s.jsxs)(n.li,{children:["dirs: directory names, e.g., ",(0,s.jsx)(n.code,{children:'{ name = "Desktop", ... }'})]}),"\n",(0,s.jsxs)(n.li,{children:["files: file names, e.g., ",(0,s.jsx)(n.code,{children:'{ name = ".bashrc", ... }'})]}),"\n",(0,s.jsxs)(n.li,{children:["exts: extensions, e.g., ",(0,s.jsx)(n.code,{children:'{ name = "mp3", ... }'})]}),"\n",(0,s.jsxs)(n.li,{children:["conds: conditions, e.g., ",(0,s.jsx)(n.code,{children:'{ if = "!dir", ... }'})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dirs"}),", ",(0,s.jsx)(n.code,{children:"files"}),", and ",(0,s.jsx)(n.code,{children:"exts"})," are compiled into a HashMap at startup, offering O(1) time complexity for very fast lookups, which should meet most needs."]}),"\n",(0,s.jsxs)(n.p,{children:["For more complex and precise rules, such as matching a specific file in a specific directory, use ",(0,s.jsx)(n.code,{children:"globs"})," - these are always executed first to check if any rules in the glob set are met.\nHowever, they are much slower than ",(0,s.jsx)(n.code,{children:"dirs"}),", ",(0,s.jsx)(n.code,{children:"files"}),", and ",(0,s.jsx)(n.code,{children:"exts"}),", so it's not recommended to use them excessively."]}),"\n",(0,s.jsxs)(n.p,{children:["If none of the above rules match, it will fall back to ",(0,s.jsx)(n.code,{children:"conds"})," to check if any specific conditions are met. ",(0,s.jsx)(n.code,{children:"conds"})," are mostly used for rules related to file metadata, which includes the following conditional factors:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dir"}),": The file is a directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"hidden"}),": The file is hidden"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"link"}),": The file is a symbolic link"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"orphan"}),": The file is an orphan (broken symbolic link)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dummy"}),": The file is dummy (failed to load complete metadata, possibly the filesystem doesn't support it, such as FUSE)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"block"}),": The file is a block device"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"char"}),": The file is a char device"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fifo"}),": The file is a FIFO"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sock"}),": The file is a socket"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exec"}),": The file is executable"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sticky"}),": The file has the sticky bit set"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["These conditions support basic ",(0,s.jsx)(n.code,{children:"|"})," (or), ",(0,s.jsx)(n.code,{children:"&"})," (and), ",(0,s.jsx)(n.code,{children:"!"})," (not), and ",(0,s.jsx)(n.code,{children:"()"})," for priority, so you can combine them as needed, for example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[icon]\nprepend_conds = [\n\t{ if = "hidden & dir",  text = "\ud83d\udc7b" },  # Hidden directories\n\t{ if = "dir",           text = "\ud83d\udcc1" },  # Directories\n\t{ if = "!(dir | link)", text = "\ud83d\udcc4" },  # Normal files (not directories or symlinks)\n]\n'})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7082:(e,n,l)=>{l.d(n,{R:()=>t,x:()=>c});var i=l(758);const s={},r=i.createContext(s);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);